:Version: 3.9.4
:toc: macro
:toc-title: 目次
:toclevels: 4

= AMoAd SDK {version} Guide for iOS

toc::[]

:numbered:
:sectnums:

== 概要
AMoAd SDK for iOS（以下、本SDKと表記します）は、iOSデベロッパーが自らのアプリケーションにAMoAdが配信する広告を表示させるためのツールキットです。AMoAd Webサイトで発行する固有IDを指定してアプリケーションに個別の広告を配信します。

SDKのインストール方法につきましては、link:https://github.com/amoad/amoad-ios-sdk/blob/master/Documents/Install/Install.asciidoc[こちら]をご参照ください。

TIP: 広告はiOSデベロッパーがInterface Builderで指定する任意の位置に表示することが可能です。

== 実装方法
本SDKはInterface Builder（Xib/Storyboard）にAMoAdViewを配置することで画面に広告を表示することができます。

:numbered!:
:sectnums!:

=== UIImageView

. Interface BuilderにUIImageViewを配置します。

image:images/B5_1.png[
"UIImageView", width=90%]

TIP: AMoAdViewはUIImageViewのサブクラスなので最初の広告が表示されるまでに表示する画像を指定することができます。

=== Custom Class

image:images/B5_2.png[
"Custom Class", width=450]

[start=2]
. Identity InspectorのCustom Classに「AMoAdView」を指定します。
. User Defined Runtime Attributesに管理画面から発行されるsidをセットする。
. rotate_transition、click_transitionを設定する。

[options="header"]
|===
|Key Path |Type 2+|Value
|sid |String 2+|管理画面から発行されるSIDを設定してください（※必須）
.6+|rotate_transition .6+|String 2+|広告ローテーション時のトランジションを設定する
|"none" |トランジション「なし」（デフォルト）
|"curl_up" |トランジション「巻き上げ」
|"curl_down" |トランジション「巻き下げ」
|"flip_from_left" |トランジション「左フリップ」
|"flip_from_right" |トランジション「右フリップ」
.3+|click_transition .3+|String 2+|広告クリック時のトランジションを設定する
|"none" |トランジション「なし」（デフォルト）
|"jump" |トランジション「ジャンプ」
|===

TIP: AMoAdViewをソースコードで生成する場合は、「APPENDIX B 広告をソースコードで生成する」を参照ください。

:numbered:
:sectnums:

== デリゲート

AMoAdViewDelegateプロトコルを採用することでSDKからの通知を受け取ることが可能です。通知の種類は以下の通りです。

[options="header"]
|===
|メソッド |通知内容
|AMoAdViewDidReceiveAd: |受信成功
|AMoAdViewDidFailToReceiveAd:error: |受信失敗
|AMoAdViewDidReceiveEmptyAd: |空広告の受信
|===

=== サンプルコード（Objective-C）

.ViewController.m
[source,objective-c]
----
@interface ViewController () <AMoAdViewDelegate>
@property (nonatomic, weak) IBOutlet AMoAdView *amoadView;  // IB上のAMoAdViewを参照する
@end

@implementation ViewController

- (void)viewDidLoad
{
    [super viewDidLoad];

    // AMoAdViewDelegateの設定
    self.amoadView.delegate = self;
}

- (void) AMoAdViewDidFailToReceiveAd:(AMoAdView *)amoadView error:(NSError *)error {
    // 広告の取得に失敗した
}

- (void)AMoAdViewDidReceiveEmptyAd:(AMoAdView *)amoadView {
    // 空の広告を受信した
}

- (void)AMoAdViewDidReceiveAd:(AMoAdView *)amoadView {
    // 正常に広告を受信した
}

@end
----

=== サンプルコード（Swift）

.ViewController.swift
[source,swift]
----
import UIKit

class ViewController: UIViewController, AMoAdViewDelegate {

    @IBOutlet weak var amoadView: AMoAdView!

    override func viewDidLoad() {
        super.viewDidLoad()
        // AMoAdViewDelegateの設定.
        self.amoadView.delegate = self;
    }

    func AMoAdViewDidReceiveAd(amoadView: AMoAdView!) {
        // 正常に広告を受信した
    }

    func AMoAdViewDidFailToReceiveAd(amoadView: AMoAdView!, error: NSError!) {
        // 広告の取得に失敗した
    }

    func AMoAdViewDidReceiveEmptyAd(amoadView: AMoAdView!) {
        // 空の広告を受信した
    }
}
----

TIP: Bridging Headerに、AMoAdView.hを指定する必要があります。

== ローテーションの開始・停止
本SDKは、管理画面の「自動更新間隔」で指定された間隔で自動的に広告をローテーション表示します。ローテーションさせたくない場合やAdMob広告ネットワークメディエーション等の外部機能でAMoAd SDKを制御する際は、管理画面の「自動更新間隔」に「0」を設定してください。

TIP: ソースコードからローテーションを止めたり間隔を制御することはできません。

== テスト検証について
組み込みが正しく行われたかどうかは、管理画面から発行されるsidを設定していただくことで、確認いただけます。
広告枠を作成いただくと、AMoAdで広告枠の審査を行わせていただきます。広告枠の審査が完了するまでは、以下のバナーが表示されます。

image:images/B8_1.png[
"テスト検証", 400]

TIP: 広告枠の審査が完了すると、広告主から提供されている広告が配信されるようになります。

:numbered!:
:sectnums!:

== APPENDIX A. API仕様

.AMoAdView
AMoAd SDK for iOS で公開されているAPIを以下にまとめます。

[options="header"]
|===
|プロパティ |型 2+|説明
|sid |文字列 (NSString *) 2+|AMoAd Webサイトで発行されるID（必須）
.6+|rotateTransition .6+|列挙型 (AMoAdRotateTransition) 2+|ローテーション時のトランジション
|AMoAdRotateTransitionNone |トランジション「なし」
|AMoAdRotateTransitionFlipFromLeft |トランジション「左フリップ」
|AMoAdRotateTransitionFlipFromRight |トランジション「右フリップ」
|AMoAdRotateTransitionCurlUp |トランジション「巻き上げ」
|AMoAdRotateTransitionCurlDown |トランジション「巻き下げ」
.3+|clickTransition .3+|列挙型 (AMoAdClickTransition) 2+|クリック時のトランジション
|AMoAdClickTransitionNone |トランジション「なし」
|AMoAdClickTransitionJump |トランジション「ジャンプ」
|delegate .3+|AMoAdDelegateプロトコル 2+|通知を受け取るデリゲート
|===

.非推奨
以下のプロパティは対応する新しいプロパティに変更されました。以前のプロパティも使用することは可能ですが、非推奨となり、今後のバージョンでは使用できなくなる可能性があります。

[options="header"]
|===
|変更前 |型 |変更後 |型
|rotationAnimationTransition |AMoAdViewAnimationTransition |rotateTransition |AMoAdRotateTransition
|clickAnimationTransition |AMoAdViewClickAnimationTransition |clickTransition |AMoAdClickTransition
|===

.非対応
以下のプロパティ、メソッドは非対応となり呼び出しても何も起こりません。

|===
enableModal、rootController、currentContentSizeIdentifier、enableRotation、displayAd、startRotation、stopRotation
|===

=== AMoAdDelegateプロトコル
[options="header"]
|===
|メソッド 2+|説明
.3+|AMoAdViewDidFailToReceiveAd: error: 2+|広告受信に失敗した場合に呼び出されます。
|amoadView (AMoAdView *) |受信に失敗したAMoAdViewオブジェクト
|error (NSError) |エラーオブジェクト
.2+|AMoAdViewDidReceiveEmptyAd: 2+|空広告を受信した場合に呼び出されます。
|amoadView (AMoAdView *) |受信したAMoAdViewオブジェクト
.2+|AMoAdViewDidReceiveAd: 2+|広告受信に成功した場合に呼び出されます。
|amoadView (AMoAdView *) |受信したAMoAdViewオブジェクト
|===

=== 非推奨
以下のメソッドは対応する新しいプロパティに変更されました。以前のメソッドも使用することは可能ですが、非推奨となり、今後のバージョンでは使用できなくなる可能性があります。

[options="header"]
|===
|変更前 |変更後
|AMoAdView:didFailToReceiveAdWithError: |AMoAdViewDidFailToReceiveAd:error:
|===

== APPENDIX B. 広告をソースコードで生成する
本SDKでは広告の生成をソースコードで行うこともできます。その場合でもシングルトン・パターンなどで生成を管理する必要はなく、各画面に同じ固有IDを設定することで広告を内部的に共有します。APIの詳細については「APPENDIX A API仕様」を参照ください。

=== サンプルコード（Objective-C）

.ViewController.m
[source,objective-c]
----
- (void)viewDidLoad
{
    [super viewDidLoad];

    // 広告の設置
    AMoAdView *amoadView = [[AMoAdView alloc] initWithFrame:CGRectMake(0, 64, 320, 50)];
    amoadView.sid = @"管理画面から発行されるSIDを設定してください";
    amoadView.rotateTransition = AMoAdRotateTransitionFlipFromLeft;
    amoadView.clickTransition = AMoAdClickTransitionJump;

    [self.view addSubview:amoadView];
}
----

=== サンプルコード（Swift）

.ViewController.swift
[source,swift]
----
override func viewDidLoad() {
    super.viewDidLoad()

    // 広告の設置
    var amoadView = AMoAdView(frame: CGRectMake(0, 0, 320, 50))
    amoadView.sid = "管理画面から発行されるSIDを設定してください"
    amoadView.rotateTransition = AMoAdRotateTransitionFlipFromLeft
    amoadView.clickTransition = AMoAdClickTransitionJump

    self.view.addSubview(amoadView)
}
----

TIP: 各画面で同じ固有IDの広告を生成して追加することで広告情報が共有されます。
